// implementation of various function on array by Yashvi Mittal
#include <iostream>
using namespace std;
int n, b=0, A[100], position, i, j, e, c, f;
void select();
int main()
{
 cout<<"Enter the no. of elements you want in the array:\n";
 cin>>n;
 cout<<"Enter the elements in the array and if you want to stop adding elements, press -1.\n";
 for(int i=0;i<n;i++)
 {

 cin>>e;
 if(e==-1)
 {
 cout<<"Elements have been stored in array and you still have "<< (n-i) <<" spaces left.\n";
 break;
 }
 b++;
 A[i] = e;
 }
 while(true)
 {
 select();
 cin>>c;
 switch (c)
 {
 case 1:
 if (b<n)
 {
 for(i=b; i>0; --i)
 {
 A[i] = A[i-1];
 }
 cout<<"Enter the element which you want to add in the array: ";
 cin>> A[0];
 b++;
 }
 else
 {
 cout<<"Sorry! This element can't be added due to limit break.\n";
 }
 break;
 case 2:
 if(b<n)
 {
 cout<<"Enter the position where you want to add the element (0 to " <<b-1<< "): ";
 cin>>position;
 for( i=position; i<b; ++i)
 {
 A[i+1] =A[i];
 }
 cout<<"Enter the element which you want to add in the array: ";
 cin>>A[position];
 b++;
 }
 else
 {
 cout<<"Sorry! This element can't be added due to limit break.\n";
 }
 break;
 case 3:
 if(b<n)
 {
 cout<<"Enter the element which you want to add in the array: ";
 cin>> A[0];
 b++;
 }
 else
 {
 cout<<"Sorry! This element can't be added due to limit break.\n";
 }
 break;

 case 4:
 if(b>0)
 {
 for(i=0; i<b-1; ++i)
 {
 A[i] = A[i+1];
 }
 b--;
 }
 else
 {
 cout<<"Sorry! This element can't be removed due to limit break.\n";
 }

 break;
 case 5:
 if(b>0)
 {
 cout<<"Enter the position where you want to remove the element (0 to " <<b-1<< "): ";
 cin>> position;
 for(i = position; i<b-1; ++i)
 {
 A[i] = A[i+1];
 }
 b--;
 }
 else
 {
 cout<<"Sorry! This element can't be removed due to limit break.\n";
 }
 break;
 case 6:
 if(b>0)
 {
 b--;
 }
 break;
 case 7:
 for(i=0;i<b;i++)
 {
 f = A[i];
 j = i-1;
 while(j>=0 && A[j]>f)
 {
 A[j+1] = A[j];
 j--;
 }
 A[j+1] = f;
 }
 cout<<"Array has been sorted.\n";
 break;
 case 8:
 for (i=0; i<b; ++i)
 {
 cout<< A[i] <<" ";
 }
 cout<<endl;
 break;
 case 9:
 cout<< "Quit";
 return 1;
 default:
 cout<< "Invalid entry.\n";
 break;
 }
}
}
void select()
{
 cout<< "1. Add the element at the start.\n 2.Add the element at a particular position.\n 3.Add the
element at the end\n 4.Remove the element from the start.\n 5. Remove the element from a
particular position.\n 6. Remove the element from the end.\n 7. Sort the array.\n 8. Display the
array.\n 9. Quit the program.\n Enter you choice from the above options: ";
}